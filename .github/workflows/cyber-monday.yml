name: Cyber Monday
on:
  push:
    branches:
      - "cyber-**"

jobs:
  scavenger:
    name: Cyber Monday üíªüí•
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Start minikube
        uses: medyagh/setup-minikube@master
        id: minikube
        with:
          driver: docker
          memory: 2048
          cpus: 2
      
      - name: Check nginx-pod YAML config
        run: |
          kubectl apply -f ./cyber-monday/nginx-pod.yml
          sleep 10
          IMAGE_NAME=`kubectl describe pod nginx-pod | grep 'Image: ' | grep 'nginx:latest' -o`
          if [ "$IMAGE_NAME" == "nginx:latest" ]; then
            echo "‚úÖ Image name for pod is correct"
          else
            echo "‚ùå Image name for pod is incorrect"
          fi

          LABELS=`kubectl describe pod nginx-pod | grep 'Labels: ' | grep 'just-a-pod' -o`
          if [ "$LABELS" == "just-a-pod" ]; then
            echo "‚úÖ Labels for pod is correct"
          else
            echo "‚ùå Labels for pod is incorrect"
          fi

          CONTAINER_PORT=`kubectl describe pod nginx-pod | grep 'Port: ' -m 1 | grep '80' -o`
          if [ "$CONTAINER_PORT" == "80" ]; then
            echo "‚úÖ Container Port for pod is correct"
          else
            echo "‚ùå Container Port for pod is incorrect"
          fi
      - name: Check nginx-deployment YAML config
        run: |
          kubectl apply -f ./cyber-monday/nginx-deploy.yml
          sleep 10
          IMAGE_NAME=`kubectl describe deployment nginx | grep 'Pod Template' -A 10 | grep 'Image:' | grep 'nginx:latest' -o`
          if [ "$IMAGE_NAME" == "nginx:latest" ]; then
            echo "‚úÖ Image name for deployment is correct"
          else
            echo "‚ùå Image name for deployment is incorrect"
          fi

          REPLICAS=`kubectl describe deployment nginx | grep 'Replicas: ' | grep '3 available' -o`
          if [ "$REPLICAS" == "3 available" ]; then
            echo "‚úÖ Replicas for deployment is correct"
          else
            echo "‚ùå Replicas for deployment is incorrect"
          fi

          SELECTOR=`kubectl describe deployment nginx | grep 'Selector: ' | grep 'just-a-pod' -o`
          if [ "$SELECTOR" == "just-a-pod" ]; then
            echo "‚úÖ Selector for deployment is correct"
          else
            echo "‚ùå Selector for deployment is incorrect"
          fi

          CONTAINER_PORT=`kubectl describe deployment nginx | grep 'Port: ' -m 1 | grep '80' -o`
          if [ "$CONTAINER_PORT" == "80" ]; then
            echo "‚úÖ Container Port for deployment is correct"
          else
            echo "‚ùå Container Port for deployment is incorrect"
          fi
      - name: Check backup.txt file for kubectl cp and kubectl exec commands
        run: |
          cd cyber-monday

          FIRST_COPY_CMD=`sed -n '4{p;q}' backup.txt`
          EXEC_CMD=`sed -n '6{p;q}' backup.txt`
          SECOND_COPY_CMD=`sed -n '9{p;q}' backup.txt`

          eval "$FIRST_COPY_CMD"
          FIRST=`kubectl exec nginx-pod -- /bin/sh -c "ls /tmp | grep 'log.sh'"`
          if [ "$FIRST" == "log.sh" ]; then
            echo "‚úÖ Copying log.sh into /tmp/ of Pod succeeded"
          else
            echo "‚ùå Copying log.sh into /tmp/ of Pod failed"
          fi

          kubectl exec nginx-pod -- /bin/sh -c "chmod 777 /tmp/log.sh && touch /tmp/foo.log"
          eval "$EXEC_CMD"
          SECOND=`kubectl exec nginx-pod -- /bin/sh -c 'cat /tmp/foo.log | wc -l'`
          echo "$SECOND"
          if [ "$SECOND" != "0" ]; then
            echo "‚úÖ Executing log.sh and writing to /tmp/foo.log succeeded"
          else
            echo "‚ùå Executing log.sh and writing to /tmp/foo.log failed"
          fi

          eval "$SECOND_COPY_CMD"
          THIRD=`ls | grep foo.log`
          if [ "$THIRD" == "foo.log" ]; then
            echo "‚úÖ Copying /tmp/foo.log from Pod to local machine succeeded"
          else
            echo "‚ùå Copying /tmp/foo.log from Pod to local machine failed"
          fi
